/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OpenCVApps;

import chapter3.FaceImage;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.bytedeco.javacpp.opencv_core.IplImage;
import static org.bytedeco.javacpp.opencv_imgcodecs.cvLoadImage;
import org.bytedeco.javacv.Frame;
import org.bytedeco.javacv.Java2DFrameConverter;
import org.bytedeco.javacv.OpenCVFrameConverter;

/**
 *
 * @author user only
 */
public class OpenCVApps extends javax.swing.JFrame {

    /**
     * Creates new form OpenCVApps
     */
    public OpenCVApps() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuBar1 = new javax.swing.JMenuBar();
        imageMenu = new javax.swing.JMenu();
        filterMenu = new javax.swing.JMenu();
        faceMenu = new javax.swing.JMenu();
        faceDetectionMenuItem = new javax.swing.JMenuItem();
        FaceLandMarkDetectionMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Java Apps with OpenCV 3.4.1");
        setSize(new java.awt.Dimension(800, 600));

        imageMenu.setText("Image");

        filterMenu.setText("Filter");
        imageMenu.add(filterMenu);

        faceMenu.setText("Face");

        faceDetectionMenuItem.setText("FaceDetection");
        faceDetectionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                faceDetectionMenuItemActionPerformed(evt);
            }
        });
        faceMenu.add(faceDetectionMenuItem);

        FaceLandMarkDetectionMenuItem.setText("FaceLandMarkDetection");
        FaceLandMarkDetectionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FaceLandMarkDetectionMenuItemActionPerformed(evt);
            }
        });
        faceMenu.add(FaceLandMarkDetectionMenuItem);

        imageMenu.add(faceMenu);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        imageMenu.add(exitMenuItem);

        jMenuBar1.add(imageMenu);

        helpMenu.setText("Help");
        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);
    }// </editor-fold>//GEN-END:initComponents

    private void faceDetectionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_faceDetectionMenuItemActionPerformed
        // TODO add your handling code here:
        //Create a file chooser
        JFileChooser fc = new JFileChooser();
        //In response to a button click:
        int returnVal = fc.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            JPanel panel = new JPanel();
            FaceImage face = new FaceImage(fc.getSelectedFile());
            IplImage img = face.cvHaarClassifierDetection();
            if (img != null) {
                BufferedImage image = bufferedFromImage(img);
                JLabel label = new JLabel(new ImageIcon(image));
                panel.add(label);
                this.getContentPane().removeAll();
                this.getContentPane().add(panel);
                this.setVisible(true);
            } else{
                JOptionPane.showMessageDialog(this, "No Faces");
            }
        }
    }//GEN-LAST:event_faceDetectionMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void FaceLandMarkDetectionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FaceLandMarkDetectionMenuItemActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        //Create a file chooser
        JFileChooser fc = new JFileChooser();
        //In response to a button click:
        int returnVal = fc.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            JPanel panel = new JPanel();
            FaceImage face = new FaceImage(fc.getSelectedFile());
            IplImage img = face.cvFaceLandMarksDetection();
            if (img != null) {
                BufferedImage image = bufferedFromImage(img);
                JLabel label = new JLabel(new ImageIcon(image));
                panel.add(label);
                this.getContentPane().removeAll();
                this.getContentPane().add(panel);
                this.setVisible(true);
            } else{
                JOptionPane.showMessageDialog(this, "No Faces");
            }
        }
    }//GEN-LAST:event_FaceLandMarkDetectionMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpenCVApps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpenCVApps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpenCVApps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpenCVApps.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OpenCVApps().setVisible(true);
            }
        });
    }

    public static BufferedImage bufferedFromImage(IplImage m) {
        int type = BufferedImage.TYPE_3BYTE_BGR;
        Frame frame = new org.bytedeco.javacv.Frame();
        org.bytedeco.javacv.OpenCVFrameConverter.ToIplImage tools = new OpenCVFrameConverter.ToIplImage();
        frame = tools.convert(m);
        BufferedImage image = new BufferedImage(m.width(), m.height(), type);
        org.bytedeco.javacv.Java2DFrameConverter tools1 = new Java2DFrameConverter();
        image = tools1.convert(frame);
        return image;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem FaceLandMarkDetectionMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenuItem faceDetectionMenuItem;
    private javax.swing.JMenu faceMenu;
    private javax.swing.JMenu filterMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu imageMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
}
